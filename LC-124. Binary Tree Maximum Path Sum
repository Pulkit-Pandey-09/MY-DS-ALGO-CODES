/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int result = INT_MIN;
    int solve(TreeNode* root)
    {
        if(!root) return 0;
        
        int leftP = 0;
        int rightP = 0;
        
        leftP = solve(root->left);
        rightP = solve(root->right);
        
        int case1 = 0;
        int case2 = 0;
        
        case1 = max(max(leftP,rightP)+root->val,root->val);
        case2 = max(case1,leftP+rightP+root->val);
        result = max(result,case2);
        return case1; 
    }
    
    int maxPathSum(TreeNode* root) 
    {
        solve(root);
        return result;
    }
};
