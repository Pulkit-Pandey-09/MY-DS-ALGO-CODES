/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) 
    {
        if(head == NULL || head->next == NULL) return head;
        ListNode* curr = head;
        ListNode* prev = head;
        ListNode* newHead = head;
        while(curr != NULL && curr->next != NULL)
        {
            if(curr->next->val == curr->val)
            {
                while(curr != NULL && curr->next != NULL && curr->next->val == curr->val)
                {
                    curr = curr->next;
                }
                if(prev->val == curr->val)
                {
                    curr = curr->next;
                    prev = curr;
                    newHead = prev;
                }
                else
                {
                    prev->next = curr->next;
                    curr = curr->next;
                }
            }
            else
            {
                prev = curr;
                curr = curr->next;
            }
        }
 
        return newHead;
    }
};
