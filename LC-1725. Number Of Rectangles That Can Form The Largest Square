class myComparator {
public:
    
    bool operator()(int a, int b)
    {
        return a > b;
    }
};

class Solution {
public:
    
    int countGoodRectangles(vector<vector<int>>& rectangles) 
    {
        vector<int> maxLen;
        for(auto sides : rectangles) maxLen.push_back(min(sides[0],sides[1]));
        myComparator cmp;
        sort(maxLen.begin(),maxLen.end(),cmp);
        int stake = maxLen[0];
        int ans = 0;
        for(auto x : maxLen)
        {
            if(x != stake) break;
            ans++;
        }
        return ans;
    }
};

//Approach 2
class Solution {
public:
    int countGoodRectangles(vector<vector<int>>& rectangles) {
        int count=0,cur_max=0;
        for(auto i:rectangles){
            int val=min(i[0],i[1]);
            if(val==cur_max){count+=1;}
            else if(val>cur_max){
                cur_max=val;
                count=1;
            }
        }
        return count;
    }
};

