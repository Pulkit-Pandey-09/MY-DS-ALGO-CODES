/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    double ans = 0.0;
    pair<double,double> bring(TreeNode* root)
    {
        if(!root) return {0.0,0.0};
        auto l = bring(root->left);
        auto r = bring(root->right);
        
        pair<double,double> res;
        double lSum = l.first;
        double rSum = r.first;
        double currAverageSum = (lSum + rSum + root->val)/(1+l.second+r.second);
        
        ans = max(ans,currAverageSum);
        res.first = lSum + rSum + root->val;
        res.second = 1+l.second+r.second;
        
        return res;
    }
    
    double maximumAverageSubtree(TreeNode* root) 
    {
        bring(root);
        return ans;
    }
};
