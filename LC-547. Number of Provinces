class Solution {
public:
    
    void dfs(vector<vector<int>>& isConnected, vector<int>& vis, int i)
    {
        vis[i] = 1;
        for(int j = 0; j < isConnected.size(); j++)
        {
            if(!vis[j] && isConnected[i][j]) dfs(isConnected,vis,j);
        }
    }
    int findCircleNum(vector<vector<int>>& isConnected) 
    {
        int r = isConnected.size();
        int c = isConnected[0].size();
        int ans = 0;
        if(!r) return 0;
        vector<int> vis(r,0);
        for(int i = 0; i < r; i++)
        {
            if(!vis[i])
            {
                ans++;
                dfs(isConnected,vis,i);
            }
        }
        return ans;
    }
};
