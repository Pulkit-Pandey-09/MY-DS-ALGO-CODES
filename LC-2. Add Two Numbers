/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
 
    void solve(ListNode* l1, ListNode* l2, ListNode* dummy)
    {
        ListNode* itr = dummy;
        ListNode* p = l1;
        ListNode* q = l2;
        int sum = 0;
        int carry = 0;
        while(p != NULL || q != NULL)
        {
            int x = p != NULL ? p->val : 0;
            int y = q != NULL ? q->val : 0;
            sum = x+y+carry;
            carry = sum/10;
 
            itr->next = new ListNode(sum%10);
            itr = itr->next;
            p != NULL ? p = p->next : p;
            q != NULL ? q = q->next : q;
        }
 
        carry == 1 ? itr->next = new ListNode(carry) : itr->next = NULL;
    }
 
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) 
    {
        ListNode* dummy = new ListNode(-1);
        solve(l1,l2,dummy);
        return dummy->next;
    }
};
Close
