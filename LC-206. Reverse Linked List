/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
 
    // recursive
    /*ListNode* reverseLL(ListNode* head)
    {
        if(head == NULL || head->next == NULL) return head;
        
        ListNode* newHead = reverseLL(head->next);
        head->next->next = head;
        head->next = NULL;
        
        return newHead;
    }*/
 
    // iterative
    ListNode* reverseLL(ListNode* head)
    {
        ListNode* prev = NULL;
        ListNode* curr;
        ListNode* nextPtr;
        curr = head;
        while(curr != NULL)
        {
            nextPtr = curr->next;
            curr->next = prev;
 
            prev = curr;
            curr = nextPtr;
        }
        head = prev;
        return head;
    }
 
    ListNode* reverseList(ListNode* head) 
    {
        ListNode* newHead = reverseLL(head);
        return newHead;
    }
};
