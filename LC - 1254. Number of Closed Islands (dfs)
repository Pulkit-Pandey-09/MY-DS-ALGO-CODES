// error
class Solution {
public:
 
    vector<vector<int>> offSet = {{1,0} , {-1,0} , {0,1} , {0,-1}};
 
    bool isSafe(int i , int j , int rows , int cols, vector<vector<int>> &grid)
    {
        return grid[i][j] == 0 ? true : false;
    }
 
    bool dfs_closedIslands(vector<vector<int>>& grid , int rows , int cols , int i , int j)
    {
        if(i <= 0 || j <= 0 || i >= rows-1 || j >= cols-1 )
        {
            grid[i][j] = 1;          // i need to mark that cell visited as well
            return false;
        }
 
        grid[i][j] = 1;  // marked visited
        bool output = true;
 
        for(int i = 0 ; i < 4 ; i++)
        {
            i = i + offSet[i][0];
            j = j + offSet[i][1];
 
            if(isSafe(i,j,rows,cols,grid))
            {
                output = output & dfs_closedIslands(grid,rows,cols,i,j);
            }
        }
 
        return output;
    }
 
    int closedIsland(vector<vector<int>>& grid)
    {
        int rows = grid.size();
        if(!rows)
        {
            return 0;
        }
        int cols = grid[0].size();
        int ans = 0;
        for(int i = 0 ; i < rows ; i++)
        {
            for(int j = 0 ; j < cols ; j++)
            {
                if(grid[i][j] == 0)
                {
                    if(dfs_closedIslands(grid,rows,cols,i,j))
                    {
                        ans++;
                    }
                }
            }
        }
        return ans;
    }
};
