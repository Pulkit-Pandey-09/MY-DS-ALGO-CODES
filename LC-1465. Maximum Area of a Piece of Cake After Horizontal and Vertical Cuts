class Solution {
public:
    long long mod = 1e9+7;
    int maxArea(int h, int w, vector<int>& horizontalCuts, vector<int>& verticalCuts) 
    {
        long long maxH = INT_MIN;
        long long maxW = INT_MIN;
        sort(horizontalCuts.begin(),horizontalCuts.end());
        sort(verticalCuts.begin(),verticalCuts.end());
        
        maxH = max(horizontalCuts[0],h-horizontalCuts[horizontalCuts.size()-1]);
        for(int i = 1; i <= horizontalCuts.size()-1; i++)
        {
            maxH = max(maxH,(long long)(horizontalCuts[i]-horizontalCuts[i-1])); 
        }
    
        maxW = max(verticalCuts[0],w-verticalCuts[verticalCuts.size()-1]);
        for(int i = 1; i <= verticalCuts.size()-1; i++)
        {
            maxW = max(maxW,(long long)(verticalCuts[i]-verticalCuts[i-1])); 
        }
        
        return (maxH*maxW)%mod; 
    }
};
