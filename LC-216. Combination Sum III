class Solution {
public:
    vector<vector<int>> ans;
    // similar like O/N knapsack
    void solve(int num, int k, int n, vector<int> &temp)
    {
        if(k == 0 && n == 0)
        {
            ans.push_back(temp);
            return;
        }
        if(num > 9 || k < 0 || n < 0) return;
        
        // current num is included
        temp.push_back(num);
        solve(num+1,k-1,n-num,temp);    // making sure num is used only once.
        temp.pop_back();

        // curr num excluded
        solve(num+1,k,n,temp);
    }
    vector<vector<int>> combinationSum3(int k, int n) 
    {
        vector<int> temp;
        solve(1,k,n,temp);
        return ans;
        
    }
};
