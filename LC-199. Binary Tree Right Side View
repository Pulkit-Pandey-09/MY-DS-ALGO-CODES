/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
 
    int height(TreeNode* root)
    {
        if(!root) return 0;
 
        int lh = height(root->left);
        int rh = height(root->right);
 
        return max(lh,rh)+1;
    }
 
    void print(TreeNode* root,int level, int i, vector<bool> &visited, vector<int>& ans)
    {
        if(!root || i <= 0 || visited[level] == true) return;
        if(i == 1)
        {
            visited[level] = true;
            ans.push_back(root->val);
            return;
        }
 
 
        print(root->right,level,i-1,visited,ans);
        print(root->left,level,i-1,visited,ans);
    }
 
    vector<int> rightSideView(TreeNode* root)
    {
        vector<int> ans;
        vector<bool> visited(101,false);
        int h = height(root);
        for(int i = 1; i <= h; i++)
        {
            print(root,i,i,visited,ans);
        }
        return ans;
    }
};
