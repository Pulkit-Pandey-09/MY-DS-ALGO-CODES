/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    public:
    int height(TreeNode* root)
    {
        if(root ==  NULL) return 0;
 
        int leftH = height(root->left);
        int rightH = height(root->right);
 
        return max(leftH,rightH) + 1;
    }
 
    void printLevel(TreeNode* root , int k , vector<int>& temp)
    {
        if(root == NULL)
        {
            return;
        }
        if(k == 1)
        {
            temp.push_back(root->val);
            return;
        }
 
        printLevel(root->left,k-1,temp);
        printLevel(root->right,k-1,temp);
 
        return;
    }
 
    vector<vector<int>> levelOrder(TreeNode* root) 
    {
        int H = height(root);
        vector<vector<int>> ans;
        vector<int> temp;
        for(int i = 1 ; i <= H ; i++)
        {
            printLevel(root,i,temp);
            ans.push_back(temp);
            temp.clear();
        }
        return ans;
    }
};
