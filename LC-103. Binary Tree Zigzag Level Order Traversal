/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>>ans;
    int height(TreeNode* root)
{
    if(root==NULL) return 0;
    int left_height = height(root->left);
    int right_height = height(root->right);
 
    return max(left_height,right_height)+1;
}
 
void print_level(TreeNode* root, int k, int i, vector<int> &temp)
{
    if(root==NULL)
    {
        return;
    }
 
    if(k%2 != 0)
    {
        if(i==1)
        {
            temp.push_back(root->val);
            return;
        }
        print_level(root->left,k,i-1,temp);
        print_level(root->right,k,i-1,temp);
    }
 
    if(k%2 == 0)
    {
        if(i==1)
        {
            temp.push_back(root->val);
            return;
        }
        print_level(root->right,k,i-1,temp);
        print_level(root->left,k,i-1,temp);
    }
    return;
}
 
void print(TreeNode* root)
{
    int h = height(root);
 
    for(int i=1;i<=h;i++)
    {
        vector<int> temp;
        print_level(root,i,i,temp);
        ans.push_back(temp);
        temp.clear();
    }
}
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        print(root);
        return ans;
    }
};
